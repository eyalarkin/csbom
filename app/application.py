import json
import csv

# Internal function
# PARAMS: `component` - JSON object as dict, individual entry in `components`
#                       array in sbom output file
# RETURNS: tuple of 5 strings, data to be written to single row in CSV
def __get_data(component):
    # For each category, return either its value or None if it is nonexistent
    try:
        bomref = component["bom-ref"]
    except:
        bomref = 'None'

    try:
        name = component["name"]
    except:
        name = 'None'

    try:
        hashes = component["hashes"][0]["content"]
    except:
        hashes = 'None'

    try:
        mimetype = component["mime-type"]
    except:
        mimetype = 'None'

    try:
        mode = component["mode"]
    except:
        mode = 'None'


    return bomref, name, hashes, mode, mimetype


# PARAMS: `sbom` - string, path to sbom generated by valint
#         `write_file` - string, name of output file (csv format)
# No Return Value
def parse_sbom(sbom, write_file):
    # opening sbom
   f = open(sbom)

   # parsing json data from sbom into python dict
   data = json.load(f)

   # opening `write_file` in write mode
   with open(write_file, 'w', newline='') as csv_file:
      # defining cols
      csv_writer = csv.writer(csv_file)
      csv_writer.writerow(['bomref', 'name', 'hash', 'mimetype', 'mode'])
      # populating each row with entry in components array
      for comp in data["components"]:

         bomref, name, hashes, mode, mimetype = __get_data(comp)
         csv_writer.writerow([bomref, name, hashes, mode, mimetype])

   f.close()

